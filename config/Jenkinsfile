//gitlab的凭证
def git_auth = "9047bf42-b6da-425a-9783-d4d7c69f0290"
//构建版本的名称
def tag = "latest"
//Harbor私服地址
def harbor_url = "192.168.66.102:85"
//Harbor的项目名称
def project_name = "jenkins_test"
//Harbor的凭证
def harbor_auth = "974df856-f2b5-4126-ab7a-267af5e15f98"

node {
	stage('拉取代码') {
	    sh "echo *******开始拉取代码*********"
		checkout([$class: 'GitSCM', branches: [[name: '*/master']], doGenerateSubmoduleConfigurations: false, extensions: [], submoduleCfg: [], userRemoteConfigs: [[credentialsId: '9047bf42-b6da-425a-9783-d4d7c69f0290', url: 'https://github.com/guojun5642940/jenkins.git']]])
	    sh "echo *******代码拉取结束*********"
	}
	stage('编译，构建镜像') {

		//编译，构建本地镜像
		//sh "mvn clean package dockerfile:build"

        //切换项目目录下执行mvn package -Dmaven.test.skip=true docker:build
		sh "mvn package -Dmaven.test.skip=true docker:build"

		//给镜像打标签
		sh "docker tag ${harbor_url}/${project_name} ${harbor_url}/${project_name}/myjenkins:${tag}"

		//登录Harbor，并上传镜像
		withCredentials([usernamePassword(credentialsId: "${harbor_auth}", passwordVariable: 'password', usernameVariable: 'username')]) {
			//登录
			sh "docker login -u ${username} -p ${password} ${harbor_url}"
			//上传镜像
			sh "docker push ${harbor_url}/${project_name}/myjenkins:${tag}"
			sh "echo imageName upload Success"
		}

		sh "echo ******run image*******"

		sh "docker run -d -p:8081:8081 --name ${project_name}-test ${harbor_url}/${project_name}/myjenkins:${tag}"
	}
}